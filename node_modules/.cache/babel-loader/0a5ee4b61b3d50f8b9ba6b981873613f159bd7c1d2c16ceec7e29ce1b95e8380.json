{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\End Project\\\\seniorproj\\\\seniorproj\\\\src\\\\pages\\\\Backendlog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Backendlog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackendLogPage = () => {\n  _s();\n  const [logs, setLogs] = useState('');\n  useEffect(() => {\n    const fetchLogs = async () => {\n      try {\n        const response = await fetch('https://seniorproj-back-flask.herokuapp.com/logs');\n        if (!response.ok) {\n          throw new Error('Error fetching logs');\n        }\n        const logsData = await response.text();\n        setLogs(logsData);\n      } catch (error) {\n        setLogs('Error fetching logs.');\n      }\n    };\n    fetchLogs();\n    const intervalId = setInterval(fetchLogs, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const formatLogs = logsText => {\n    const logEntries = logsText.split('<br>').map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-entry\",\n      children: entry\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n    return logEntries;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BackendLogPage\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      readOnly: true,\n      value: formatLogs(logs),\n      style: {\n        whiteSpace: \"pre-wrap\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BackendLogPage, \"sqjKUcV1odlC/WFX6ozeUOknpQs=\");\n_c = BackendLogPage;\nexport default BackendLogPage;\nvar _c;\n$RefreshReg$(_c, \"BackendLogPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BackendLogPage","_s","logs","setLogs","fetchLogs","response","fetch","ok","Error","logsData","text","error","intervalId","setInterval","clearInterval","formatLogs","logsText","logEntries","split","map","entry","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","value","style","whiteSpace","_c","$RefreshReg$"],"sources":["D:/Data/End Project/seniorproj/seniorproj/src/pages/Backendlog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Backendlog.css';\r\n\r\nconst BackendLogPage = () => {\r\n\r\n  const [logs, setLogs] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchLogs = async () => {\r\n      try {\r\n        const response = await fetch('https://seniorproj-back-flask.herokuapp.com/logs');\r\n        if (!response.ok) {\r\n          throw new Error('Error fetching logs');\r\n        }\r\n        const logsData = await response.text();\r\n        setLogs(logsData);\r\n      } catch (error) {\r\n        setLogs('Error fetching logs.');\r\n      }\r\n    };\r\n\r\n    fetchLogs();\r\n\r\n    const intervalId = setInterval(fetchLogs, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const formatLogs = (logsText) => {\r\n    const logEntries = logsText.split('<br>').map((entry, index) => (\r\n      <div key={index} className=\"log-entry\">{entry}</div>\r\n    ));\r\n    return logEntries;\r\n  };\r\n\r\n  return (\r\n    <div className=\"BackendLogPage\">\r\n      <textarea\r\n        readOnly\r\n        value={formatLogs(logs)}\r\n        style={{ whiteSpace: \"pre-wrap\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackendLogPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,CAAC;QAChF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;QACxC;QACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QACtCP,OAAO,CAACM,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdR,OAAO,CAAC,sBAAsB,CAAC;MACjC;IACF,CAAC;IAEDC,SAAS,EAAE;IAEX,MAAMQ,UAAU,GAAGC,WAAW,CAACT,SAAS,EAAE,IAAI,CAAC;IAE/C,OAAO,MAAM;MACXU,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAIC,QAAQ,IAAK;IAC/B,MAAMC,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAAC,MAAM,CAAC,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACzDtB,OAAA;MAAiBuB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEH;IAAK,GAAnCC,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,CAAC;IACF,OAAOV,UAAU;EACnB,CAAC;EAED,oBACElB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BxB,OAAA;MACE6B,QAAQ;MACRC,KAAK,EAAEd,UAAU,CAACb,IAAI,CAAE;MACxB4B,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAA1B,EAAA,CA3CKD,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}